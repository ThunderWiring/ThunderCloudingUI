<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>